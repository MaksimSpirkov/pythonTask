# На столе лежат n монеток. Некоторые из них лежат 
# вверх решкой, а некоторые – гербом. Определите 
# минимальное число монеток, которые нужно перевернуть, 
# чтобы все монетки были повернуты вверх одной и той же 
# стороной. Выведите минимальное количество монет, 
# которые нужно перевернуть

# def min_coin_flips(n, coins):
#     # Считаем количество монеток, которые лежат вверх решкой и гербом
#     count_heads = sum(coins)
#     count_tails = n - count_heads

#     # Находим минимальное количество монеток, которые нужно перевернуть
#     # Минимальное количество равно максимуму из количества монеток, лежащих вверх решкой
#     # и количества монеток, лежащих вверх гербом
#     return max(count_heads, count_tails)

# # Получаем количество монеток от пользователя
# n = int(input("Введите количество монеток (n): "))

# # Получаем состояние каждой монетки (0 - герб, 1 - решка) от пользователя
# coins = []
# for i in range(n):
#     coin = int(input("Введите состояние монетки (0 - герб, 1 - решка) №" + str(i + 1) + ": "))
#     coins.append(coin)

# # Вызываем функцию min_coin_flips() для нахождения минимального количества переворотов
# min_flips = min_coin_flips(n, coins)
# print("Минимальное количество монеток, которые нужно перевернуть:", min_flips)

n = int(input())
k = 0
for i in range(n):
    v = int(input())
    if v == 1:
        k += 1
print(k if k<n/2 else n-k)
